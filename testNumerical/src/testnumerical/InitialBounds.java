/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testnumerical;

import java.math.BigDecimal;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author Frost
 */
public class InitialBounds extends javax.swing.JFrame {

    /**
     * Creates new form InitialUpperLower
     */
    String terms;
    BigDecimal[] coefficients;
    int[] degree;
    BigDecimal upper;
    BigDecimal lower;
    BigDecimal marginErrorValue;
    int modeOfIter;
    int noIter;
    
    
    public InitialBounds(String terms, BigDecimal[] coefficients, int[] degree) {
        
        this.terms=terms;
        this.coefficients=coefficients;
        this.degree=degree;
        System.out.println(terms);
        initComponents();
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(MarginError);
        buttonGroup.add(noIteration);
        setVisible(true);
        setTitle("Numerical Methods");
        setLocationRelativeTo(null);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tempUpper = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tempLower = new javax.swing.JTextField();
        autoPickButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        MarginError = new javax.swing.JRadioButton();
        noIteration = new javax.swing.JRadioButton();
        IterationField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        submitButton1 = new javax.swing.JButton();
        submitButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("INITIAL BOUNDS (FALSE POSITION)");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("LOWER BOUND:");

        tempUpper.setBackground(new java.awt.Color(255, 255, 255));
        tempUpper.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("UPPER  BOUND:");

        tempLower.setBackground(new java.awt.Color(255, 255, 255));
        tempLower.setForeground(new java.awt.Color(51, 51, 51));

        autoPickButton.setBackground(new java.awt.Color(0, 0, 0));
        autoPickButton.setForeground(new java.awt.Color(255, 255, 255));
        autoPickButton.setText("Auto Bounds");
        autoPickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoPickButtonActionPerformed(evt);
            }
        });

        submitButton.setBackground(new java.awt.Color(0, 0, 0));
        submitButton.setForeground(new java.awt.Color(255, 255, 255));
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(terms);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("MODE OF ITERATION");

        MarginError.setBackground(new java.awt.Color(204, 204, 255));
        MarginError.setForeground(new java.awt.Color(0, 0, 0));
        MarginError.setText("MARGIN OF ERROR");
        MarginError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarginErrorActionPerformed(evt);
            }
        });

        noIteration.setBackground(new java.awt.Color(204, 204, 255));
        noIteration.setForeground(new java.awt.Color(0, 0, 0));
        noIteration.setText("NO. OF ITERATION");
        noIteration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noIterationActionPerformed(evt);
            }
        });

        IterationField.setBackground(new java.awt.Color(255, 255, 255));
        IterationField.setForeground(new java.awt.Color(0, 0, 0));
        IterationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IterationFieldActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        submitButton1.setBackground(new java.awt.Color(0, 0, 0));
        submitButton1.setForeground(new java.awt.Color(255, 255, 255));
        submitButton1.setText("BACK");
        submitButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButton1ActionPerformed(evt);
            }
        });

        submitButton2.setBackground(new java.awt.Color(0, 0, 0));
        submitButton2.setForeground(new java.awt.Color(255, 255, 255));
        submitButton2.setText("HOME");
        submitButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(autoPickButton)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tempUpper, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tempLower, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(IterationField, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(MarginError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(noIteration, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149)
                                .addComponent(submitButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(submitButton2)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tempLower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempUpper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(autoPickButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(IterationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(MarginError)
                .addGap(18, 18, 18)
                .addComponent(noIteration)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(submitButton1)
                    .addComponent(submitButton2))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
  // Parse the upper and lower values as BigDecimal

  //  evaluateFx eval=new evaluateFx();
  // eval.ComputeFx(upper, coefficients, degree);
  String stringUpper = tempUpper.getText();
  String stringLower = tempLower.getText();
  BigDecimal upper, lower;
  try {
    upper = new BigDecimal(stringUpper);
    lower = new BigDecimal(stringLower);
    //  eval.ComputeFx(upper, coefficients, degree);
    //  eval.ComputeFx(lower,coefficients,degree);
    
  //Check if the inputted upper bound and lower is an integer
  } catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(InitialBounds.this, "Upper and Lower must be real numbers.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
  }

  // Check that the upper and lower values are not equal
  if (upper.equals(lower)) {
JOptionPane.showMessageDialog(InitialBounds.this, "Upper and Lower cannot be equal.", "Error", JOptionPane.ERROR_MESSAGE);

    
    return;
  }

  // Check that the difference between upper and lower is not greater than 3
  BigDecimal three = new BigDecimal("3");
  if (upper.subtract(lower).abs().compareTo(three) > 0) {
    JOptionPane.showMessageDialog(InitialBounds.this, "Upper and Lower cannot be more than 3 units apart.","Error",JOptionPane.ERROR_MESSAGE);
    return;
  }
  //Check if the program passes from positive quadrant to negative quadrant
  InitialUpperLower upLow = new InitialUpperLower();
  upLow.autoPick(coefficients, degree);
  evaluateFx Fx = new evaluateFx();

  BigDecimal upperFx = Fx.ComputeFx(upper, coefficients, degree);
  BigDecimal lowerFx = Fx.ComputeFx(lower, coefficients, degree);

  System.out.println("Fx Upper" + upperFx);
  System.out.println("Fx Lower" + lowerFx);

  if (upperFx.multiply(lowerFx).compareTo(new BigDecimal("0")) > 0) {
    JOptionPane.showMessageDialog(InitialBounds.this, "LOWER AND UPPER F(X) HAVE THE SAME SIGN","Error",JOptionPane.ERROR_MESSAGE);
    return;
  }
  this.upper = upper;
  this.lower = lower;

  // Parse the iteration value and mode of iteration
  String inputText = IterationField.getText();
  boolean marginErrorRadio = MarginError.isSelected();
  MarginError.setSelected(true);
  if (marginErrorRadio) {
    // Check that the margin error value is between 0 and 1 (exclusive)
    BigDecimal marginErrorValue;
    try {
      marginErrorValue = new BigDecimal(inputText);
    } catch (NumberFormatException e) {
      JOptionPane.showMessageDialog(InitialBounds.this, "Margin error must be a real number.","Error",JOptionPane.ERROR_MESSAGE);
      return;
    }
    if (marginErrorValue.compareTo(BigDecimal.ZERO) <= 0 || marginErrorValue.compareTo(BigDecimal.ONE) >= 0) {
      JOptionPane.showMessageDialog(InitialBounds.this, "Margin error must be between 0 and 1 (exclusive).","Error",JOptionPane.ERROR_MESSAGE);
      return;
    }

    // Set the mode of iteration and margin error value
    this.modeOfIter = 1;
    this.marginErrorValue = marginErrorValue;
  } else {
    // Parse the number of iterations
    int noIter;
    try {
      noIter = Integer.parseInt(inputText);
    } catch (NumberFormatException e) {
      JOptionPane.showMessageDialog(InitialBounds.this, "Number of iterations must be a positive integer.","Error",JOptionPane.ERROR_MESSAGE);
      return;
    }
    if (noIter <= 0) {
      JOptionPane.showMessageDialog(InitialBounds.this, "Number of iterations must be a positive integer.","Error",JOptionPane.ERROR_MESSAGE);
      return;
    }

    // Set the mode of iteration and number of iterations
    this.modeOfIter = 2;
    this.noIter = noIter;
  }

  // Close the dialog and gets the the value needed for the calculation
  BigDecimal tempLower = getLowerBound();
  BigDecimal tempUpper = getUpperBound();

  int noIter = getNoIter();
  BigDecimal marginError = getError();
  int modeIterRegula = getModeIter();

  System.out.println("LowerBound: " + tempLower);
  System.out.println("UpperBound: " + tempUpper);
  System.out.println("NoIter: " + noIter);
  System.out.println("Margin of Error " + marginError);
  System.out.println("Mode of Iter:" + modeIterRegula);
  CalcFalsi regula = new CalcFalsi();
  if (modeIterRegula == 1) {
    regula.errorFalsi(terms, coefficients, degree, tempLower, tempUpper, marginError, noIter);
  } else {
    regula.noIterFalsi(terms, coefficients, degree, tempLower, tempUpper, noIter);
  }
     
    }//GEN-LAST:event_submitButtonActionPerformed
    //getter for epsilon or the margin of error
    public BigDecimal getError(){
    return marginErrorValue;
    }
    //getter for the number of iteration in case the mode is the maximum iteration
    public int getNoIter(){
    return noIter;
    }
    //gets the value of radio button so that the system can decide what mode of iteration to be used
    public int getModeIter(){
    return modeOfIter;}
    
    private void autoPickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoPickButtonActionPerformed
          // TODO add your handling code here:
   InitialUpperLower upLow = new InitialUpperLower();
   upLow.autoPick(coefficients, degree);
   evaluateFx Fx = new evaluateFx();

   BigDecimal upper = upLow.getUpperBound();
   BigDecimal lower = upLow.getLowerBound();

   BigDecimal upperFx = Fx.ComputeFx(upper, coefficients, degree);
   BigDecimal lowerFx = Fx.ComputeFx(lower, coefficients, degree);

   System.out.println("Fx Upper" + upperFx);
   System.out.println("Fx Lower" + lowerFx);
   // tempLower.setText(lower.toString());
   //    tempUpper.setText(upper.toString());
   
   //checks if the fx is having different sign if not so its not allowed
   if (upperFx.multiply(lowerFx).compareTo(new BigDecimal("0")) > 0) {
     JOptionPane.showMessageDialog(InitialBounds.this, "THIS FUNCTION DOESN'T PASS THE ROOT","Error",JOptionPane.ERROR_MESSAGE);

   } else {

     //  tempLower.setText(lower.toString());
     //     tempUpper.setText(upper.toString());
   }
   // Gives suggestion and show it using JOptionPane
    ArrayList < BigDecimal[] > bracketing = upLow.getBracketing();
   StringBuilder messageBuilder = new StringBuilder();

   for (BigDecimal[] bounds: bracketing) {
     messageBuilder.append("Lower Limit: ").append(bounds[0]).append(", Upper Limit: ").append(bounds[1]).append("\n");
   }

   String message = messageBuilder.toString();
   JOptionPane.showMessageDialog(InitialBounds.this, "You can use the following Upper and Lower Limit:\n" + message);
   System.out.println("InitialBound Upper" + upper);
   System.out.println("Initial bound lower" + lower);
        
    }//GEN-LAST:event_autoPickButtonActionPerformed

    private void MarginErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarginErrorActionPerformed

    }//GEN-LAST:event_MarginErrorActionPerformed

    private void IterationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IterationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IterationFieldActionPerformed

    private void noIterationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noIterationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noIterationActionPerformed

    private void submitButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
        PolynomialGUI gui= new PolynomialGUI();
    }//GEN-LAST:event_submitButton1ActionPerformed

    private void submitButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButton2ActionPerformed
       dispose();
       homePage home=new homePage();
    }//GEN-LAST:event_submitButton2ActionPerformed
public BigDecimal getUpperBound(){
   return upper;
    }
public BigDecimal getLowerBound(){

return lower;}
 
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IterationField;
    private javax.swing.JRadioButton MarginError;
    private javax.swing.JButton autoPickButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton noIteration;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton submitButton1;
    private javax.swing.JButton submitButton2;
    private javax.swing.JTextField tempLower;
    private javax.swing.JTextField tempUpper;
    // End of variables declaration//GEN-END:variables
}
